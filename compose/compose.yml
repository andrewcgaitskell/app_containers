services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /opt/data/home_assistant/config:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  esphome:
    container_name: esphome
    image: ghcr.io/esphome/esphome
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    volumes:
      - /opt/data/esphome/config:/config
      - /etc/localtime:/etc/localtime:ro
    restart: always
    privileged: true
    network_mode: host
    environment:
      - USERNAME=${ESPHOME_USERNAME}
      - PASSWORD=${ESPHOME_PASSWORD}

  mosquitto:
    build:
      context: ../mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - /opt/data/mosquitto/data:/mosquitto/data
      - /opt/data/mosquitto/log:/mosquitto/log

  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    volumes:
      - /opt/data/zigbee2mqtt_data:/app/data
      - /run/udev:/run/udev:ro
    restart: unless-stopped
    ports:
      - 8080:8080
    environment:
      - TZ=Europe/London
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

  matter-server:
    image: ghcr.io/home-assistant-libs/python-matter-server:stable
    container_name: matter-server
    restart: unless-stopped
    network_mode: host
    security_opt:
      - apparmor:unconfined
    volumes:
      - /opt/data/matter/data:/data/
      - /run/dbus:/run/dbus:ro

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - /opt/data/postgres_data:/var/lib/postgresql/data

  quart_app:
    build:
      context: ../quart_app
      dockerfile: Dockerfile
    container_name: quart_app
    depends_on:
      - postgres
      - mosquitto
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      HASS_TOKEN: ${HASS_TOKEN}
      HASS_URL: ${HASS_URL}
      MQTT_TOPIC: "#"  # subscribe to all topics
    volumes:
      - /opt/data/app_containers/quart_app:/app
    ports:
      - "5000:5000"

  blockly:
    build:
      context: ../blockly
      dockerfile: Dockerfile
    container_name: blockly
    depends_on:
      - postgres
      - mosquitto
    environment:
      MQTT_BROKER: mosquitto
      MQTT_PORT: 1883
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      MQTT_TOPIC: "#"  # subscribe to all topics
    ports:
      - "5001:5001"

  jupyter:
    build:
      # compose lives in repo/compose, Dockerfile lives in repo/jupyter (sibling dir)
      context: ../jupyter
      dockerfile: Dockerfile
    # run container process as root so it can write to the host bind mount /opt/data
    ports:
      - "8889:8888"
    volumes:
      - /opt/data/notebooks:/home/jovyan/work
    working_dir: /home/jovyan/work
    command: start-notebook.py --NotebookApp.token='my-secret-token'
    restart: unless-stopped

  dbeavercloud:
    build:
      # compose lives in repo/compose, Dockerfile lives in repo/dbeavercloud (sibling dir)
      context: ../dbeaver
      dockerfile: Dockerfile
    # run container process as root so it can write to the host bind mount /opt/data
    ports:
      # map host port 8892 to the container's CloudBeaver port 8978
      - "8892:8978"
    volumes:
      # persist CloudBeaver workspace in /opt/data on the host
      - /opt/data/dbeaver:/opt/cloudbeaver/work
    working_dir: /opt/cloudbeaver
    restart: unless-stopped
